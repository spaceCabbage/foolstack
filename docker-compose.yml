name: foolstack

services:
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: ${ENVIRONMENT:-development}
    container_name: foolstack_server
    env_file: .env
    volumes:
      - ./server:/app:delegated
      - /app/__pycache__
    ports:
      - '${DJANGO_PORT:-8000}:8000'
    networks:
      - default
    healthcheck:
      test:
        [
          'CMD',
          'poetry',
          'run',
          'python',
          '-c',
          'import urllib.request, os; urllib.request.urlopen(f''http://localhost:{os.getenv("DJANGO_PORT", "8000")}/health/'')',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      target: ${ENVIRONMENT:-development}
    container_name: foolstack_client
    env_file: .env
    volumes:
      - ./client:/app:delegated
      # Exclude node_modules and build artifacts for better performance
      - /app/node_modules
      - /app/dist
      - /app/.bun
    ports:
      - '${VUE_PORT:-5173}:${VUE_PORT:-5173}'
    networks:
      - default
    environment:
      - BASE_DOMAIN=${BASE_DOMAIN}
      - ENVIRONMENT=${ENVIRONMENT}
      - LOG_LEVEL=${LOG_LEVEL}

  caddy:
    image: caddy:2.8-alpine
    container_name: foolstack_caddy
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
      - ./client/dist:/srv/vue:ro
    networks:
      - default
    depends_on:
      - server
      - client
    environment:
      - BASE_DOMAIN=${BASE_DOMAIN}
      - CADDY_EMAIL=${CADDY_EMAIL}
      - ENVIRONMENT=${ENVIRONMENT}
      - VUE_PORT=${VUE_PORT}
      - DJANGO_PORT=${DJANGO_PORT}

networks:
  default:
    driver: bridge

volumes:
  caddy_data:
  caddy_config:
